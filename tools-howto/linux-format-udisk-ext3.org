#+TITLE: Linux Format Udisk As Ext3 format

* show u-disk info
#+BEGIN_SRC sh
$ sudo fdisk -l
#+END_SRC

#+BEGIN_SRC info
Disk /dev/sdb: 7948 MB, 7948206080 bytes
245 heads, 62 sectors/track, 1021 cylinders, total 15523840 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            4096      524287      260096   83  Linux
/dev/sdb2          524288    15523839     7499776   83  Linux
#+END_SRC

there are two partitions. /dev/sdb1, /dev/sdb2

* format entire u-disk
#+BEGIN_SRC sh
$ sudo mkfs.ext3 /dev/sdb
#+END_SRC

#+BEGIN_SRC info
mke2fs 1.42.9 (4-Feb-2014)
/dev/sdb is entire device, not just one partition!
Proceed anyway? (y,n) y
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
485760 inodes, 1940480 blocks
97024 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=1988100096
60 block groups
32768 blocks per group, 32768 fragments per group
8096 inodes per group
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done 
#+END_SRC

* show format result
#+BEGIN_SRC sh
$ sudo fdisk -l
#+END_SRC
#+BEGIN_SRC info
Disk /dev/sdb: 7948 MB, 7948206080 bytes
245 heads, 62 sectors/track, 1021 cylinders, total 15523840 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/sdb doesn't contain a valid partition table
#+END_SRC

* solve "Disk /dev/sdb doesn't contain a valid partition table" problem
#+BEGIN_SRC sh
$ sudo fdisk /dev/sdb
#+END_SRC

#+BEGIN_SRC info
Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel
Building a new DOS disklabel with disk identifier 0xd1b6e499.
Changes will remain in memory only, until you decide to write them.
After that, of course, the previous content won't be recoverable.

Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)

Command (m for help): m
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition's system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-15523839, default 2048): 
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-15523839, default 15523839): 
Using default value 15523839

Command (m for help): p

Disk /dev/sdb: 7948 MB, 7948206080 bytes
245 heads, 62 sectors/track, 1021 cylinders, total 15523840 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0xd1b6e499

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    15523839     7760896   83  Linux

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
#+END_SRC

* create filesystem for u-disk partion 1 (/dev/sdb1)
#+BEGIN_SRC sh
$ sudo mkfs.ext3 /dev/sdb1
#+END_SRC

* test format result
#+BEGIN_SRC sh
$ sudo mount /dev/sdb1  /mnt/
$ sudo touch /mnt/aa
$ ls /mnt/
#+END_SRC

#+BEGIN_SRC info
aa  lost+found
#+END_SRC
